AWSTemplateFormatVersion: 2010-09-09
Description: Deploy list-account-in-organizations lambda.

Parameters:
  FunctionName:
    Type: String
    Default: list-account-in-organizations

  OuRootRoleName:
    Type: String
    Default: role_list_accounts

  OuRootAccountId:
    Type: String
    Default: xxxxxxxxxxxx # set ou root account id.

Resources:

  # IAM Policy
  ListAccountsFunctionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "policy_list_accounts_function"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: "PermissionToAssumeRole"
          Effect: Allow
          Action:
          - "sts:AssumeRole"
          Resource:
          - !Sub "arn:aws:iam::*:role/${OuRootRoleName}"

  # IAM Role
  ListAccountsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "role_list_accounts_function"
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambdaExecute
      - !Ref ListAccountsFunctionPolicy
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole

  # Lambda Function
  ListAccountLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: lambda
      FunctionName: !Ref FunctionName
      Environment:
        Variables:
          ASSUME_ROLE_NAME: !Sub ${OuRootRoleName}
          OU_ROOT_ACCOUNT_ID: !Sub ${OuRootAccountId}
      Handler: main.handler
      Role: !GetAtt ListAccountsFunctionRole.Arn
      Runtime: python3.12
      Timeout: 60
